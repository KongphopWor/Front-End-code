import React, { useState, useEffect } from 'react';
import { getFirestore, updateDoc, doc } from 'firebase/firestore';
import FirebaseApp from './Firebase';


const EditModal = ({ showModal, handleClose, itemId, collectionName }) => {
    const [name, setName] = useState('');
    const [description, setDescription] = useState('');

    // Reset name and description when the modal is opened
    useEffect(() => {
        if (showModal) {
            setName('');
            setDescription('');
        }
    }, [showModal]);

    const handleSaveChanges = async () => {
        try {
            if (!name || !description) {
                alert('Please enter both name and description.');
                window.location.reload(); // Reload the webpage
                return;
            }

            const db = getFirestore(FirebaseApp);
            const docRef = doc(db, collectionName, itemId);

            await updateDoc(docRef, {
                Name: name,
                Description: description
            });

            handleClose(); // Close the modal after saving changes
            window.location.reload(); // Reload the webpage

        } catch (error) {
            console.error('Error updating document:', error);
        }
    };

    const handleCloseAndReload = () => {
        handleClose(); // Close the modal
        window.location.reload(); // Reload the webpage
    };

    const handleBackdropClick = (e) => {
        if (e.target.classList.contains('modal')) {
            handleCloseAndReload();
        }
    };

    return (
        <div className={`modal fade ${showModal ? 'show' : ''}`} tabIndex="-1" aria-labelledby="editModalLabel" aria-hidden={!showModal} id="editModal" onClick={handleBackdropClick}>
            <div className="modal-dialog">
                <div className="modal-content">
                    <div className="modal-header">
                        <h5 className="modal-title text-warning" id="editModalLabel" style={{ fontWeight: 'bold' }}>SETTING</h5>
                        <button type="button" className="btn-close" aria-label="Close" data-bs-dismiss="modal" onClick={handleCloseAndReload}></button>
                    </div>
                    <div className="modal-body">
                        <form>
                            <div className="mb-3">
                                <label htmlFor="projectName" className="form-label">Project Name</label>
                                <input type="text" className="form-control" id="projectName" placeholder="Name" value={name} onChange={(e) => setName(e.target.value)} />
                            </div>
                            <div className="mb-3">
                                <label htmlFor="projectDescription" className="form-label">Description</label>
                                <textarea className="form-control" id="projectDescription" rows="3" placeholder="Description" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>
                            </div>
                        </form>
                    </div>
                    <div className="modal-footer">
                        <button type="button" className="btn btn-secondary" data-bs-dismiss="modal" onClick={handleCloseAndReload}>Cancel</button>
                        <button type="button" className="btn btn-warning" data-bs-dismiss="modal" onClick={handleSaveChanges}>Save changes</button>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default EditModal;
